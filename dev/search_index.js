var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Cim","category":"page"},{"location":"#Cim","page":"Home","title":"Cim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Cim.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Cim]","category":"page"},{"location":"#Cim.AbstractContour","page":"Home","title":"Cim.AbstractContour","text":"contours that we plan to support:      1. ellipse      2. circle      3. rectangle (not supported yet)\n\n\n\n\n\n","category":"type"},{"location":"#Cim.circle","page":"Home","title":"Cim.circle","text":"\n\n\n\n","category":"type"},{"location":"#Cim.quadpts","page":"Home","title":"Cim.quadpts","text":"\n\n\n\n","category":"type"},{"location":"#Cim.rectangle","page":"Home","title":"Cim.rectangle","text":"\n\n\n\n","category":"type"},{"location":"#Cim.contr_int-Tuple{Cim.AbstractContour, Function, Any, Int64}","page":"Home","title":"Cim.contr_int","text":"NEP: the matrix function of the nonlinear eigenvalue problem D: the size of the NEP l: a number between k(the number of eigenvalues inside the contour) and D, k <= L <= D\n\n\n\n\n\n","category":"method"},{"location":"#Cim.contr_int_ho-Tuple{Cim.quadpts, Function, Vararg{Int64, 4}}","page":"Home","title":"Cim.contr_int_ho","text":"contour integral method with high-order moments  pbar: the number of the moments (for p = 0, ..., pbar)\n\nIn this function, we follow the notations in Stefan Guttel, Francoise Tisseur, Acta Numerica, 2017 r,l : size of the probing matrices\n\n\n\n\n\n","category":"method"},{"location":"#Cim.get_quadpts-Tuple{Cim.ellipse, Int64}","page":"Home","title":"Cim.get_quadpts","text":"get_quadpts(contour::ellipse or circle, num_quadpts::Int64)\n-------------------------------------------------------\nInput:\n    contour    : the contour that we discretize \n    num_quadpts: the number of the quadrature nodes\nOutput:\n    quadpts    : the struct quadpts which contains the \n                 information of the quadrature nodes\n\nTODO: note that rectangle is different with ellipse and circle\n\n\n\n\n\n","category":"method"},{"location":"#Cim.is_inside-Tuple{Any, Cim.ellipse}","page":"Home","title":"Cim.is_inside","text":"is_inside(λ, ctr::ellipse)\nis_inside(λ, ctr::circle)\n\nCheck if the eigenvalue λ is in the contour ctr to avoid  spurious eigenvalues.\n\n\n\n\n\n","category":"method"},{"location":"#Cim.show_eigenvalues!-Tuple{Any, AbstractArray}","page":"Home","title":"Cim.show_eigenvalues!","text":"show_eigenvalues(ax, eigvals::AbstractArray)\n\nPlot the eigenvalues on complex plane\n\n\n\n\n\n","category":"method"},{"location":"#Cim.show_quadpts!-Tuple{Any, Cim.quadpts}","page":"Home","title":"Cim.show_quadpts!","text":"show_quadpts!(ax, pts::quadpts)\n\nPlot the quadrature points pts\n\n\n\n\n\n","category":"method"}]
}

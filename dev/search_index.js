var documenterSearchIndex = {"docs":
[{"location":"references/","page":"References","title":"References","text":"W.-J. Beyn. An integral method for solving nonlinear eigenvalue problems. Linear Algebra Appl. 436, 3839–3863 (2012).\n\n\n\nS. Güttel and F. Tisseur. The nonlinear eigenvalue problem. Acta Numer. 26, 1–94 (2017).\n\n\n\nR. Mennicken and M. Möller. Non-self-adjoint boundary eigenvalue problems. Vol. 192 of North-Holland Mathematics Studies (North-Holland Publishing Co., Amsterdam, 2003); p. xviii+500.\n\n\n\nS. I. Solovyev. Preconditioned iterative methods for a class of nonlinear               eigenvalue problems. Linear Algebra Appl. 415, 210–229 (2006).\n\n\n\nD. Kressner. A block Newton method for nonlinear eigenvalue problems. Numer. Math. 114, 355–372 (2009).\n\n\n\n","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#Cim.AbstractContour","page":"API","title":"Cim.AbstractContour","text":"contours that we plan to support:      1. ellipse      2. circle      3. rectangle (not supported yet)\n\n\n\n\n\n","category":"type"},{"location":"api/#Cim.Qep","page":"API","title":"Cim.Qep","text":"Qep{T}\n\nConstruct quadratic eigenvlaue problems \n\n(mathbfA_0 + alpha mathbfA_1 + alpha^2 mathbfA_2) mathbfu = 0\n\nFields\n\nA₀: the matrix in the zero order term\nA₁: the matrix in the first order term\nA₂: the matrix in the second order term \n\n\n\n\n\n","category":"type"},{"location":"api/#Cim.Qep-Union{Tuple{S}, Tuple{T}} where {T, S}","page":"API","title":"Cim.Qep","text":"(q::Qep{T})(α::S) where {T, S}\n\nCompute the matrix of the quadratic eigenvalue problem at specific value α.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.Qep-Union{Tuple{}, Tuple{T}} where T","page":"API","title":"Cim.Qep","text":"Qep{T}(; \nA₀::SparseMatrixCSC{T, Int}, \nA₁::SparseMatrixCSC{T, Int}, \nA₂::SparseMatrixCSC{T, Int}) where T\n\nUse keywords arguments to construct qaudratic eigenvalue problems.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.quadpts","page":"API","title":"Cim.quadpts","text":"quadpts\n\nQuadrature points of the trapezoidal rule on the contours.\n\nProperties\n\nN: the number of the quadrature nodes\nnodes: quadrature nodes size of N x 2 \nnodes_prime: derivative of the parametrization size of N x 2\n\n\n\n\n\n","category":"type"},{"location":"api/#Cim.cim-Tuple{Cim.AbstractContour, Function, Any, Int64}","page":"API","title":"Cim.cim","text":"cim(ctr::AbstractContour, nep::Function, D, l::Int64; n=50, tol=1e-12)\n\nContour integral method to calculate the eigenvalues inside the contour ctr\n\nArugments\n\nctr: the contour\nnep: the nonlinear eigenvalue problem\nd: the scale of the nep\nl: the number of columns of random matrix\nn: the number of the quadrature points (here we use the trapezoid rule)\ntol: tolerance to determine the number of nonzero singular values\n\nReference\n\nWolf-Jurgen Beyn, An integral method for solving NEPs, Linear Algebra Appl., 2012.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.cim-Union{Tuple{T}, Tuple{Cim.AbstractContour, Qep{T}, Int64, Int64}} where T","page":"API","title":"Cim.cim","text":"cim(ctr::AbstractContour, nep::Qep, d::Int64, l::Int64; n=50, tol=1e-12)\n\nUse the contour integral method to solve quadratic eigenvalue problems.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.contr_int_ho-Tuple{Cim.quadpts, Function, Vararg{Int64, 4}}","page":"API","title":"Cim.contr_int_ho","text":"contr_int_ho()\n\nContour integral method with high-order moments \n\nArguments\n\nIn this function, we follow the notations in Stefan Guttel, Francoise Tisseur, Acta Numerica, 2017\n\nctr:\nnep:\nD:\nr, l: size of the probing matrices\npbar: the number of the moments (for p = 0, ..., pbar)\n\nReference\n\nStefan Guttel, Francoise Tisseur, The NEP, Acta Numerica, 2017.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.get_quadpts-Tuple{Cim.ellipse, Int64}","page":"API","title":"Cim.get_quadpts","text":"get_quadpts(ctr::ellipse, num_quadpts::Int64)\nget_quadpts(ctr::circle, num_quadpts::Int64)\n\nGet the quadrature points on the ellipse ctr. Here we use trapezoidal rule.\n\nArguments\n\nctr: the contour (circle or ellipse) that we discretize\nnum_quadpts: the number of the quadrature nodes\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.is_inside-Tuple{Any, Cim.ellipse}","page":"API","title":"Cim.is_inside","text":"is_inside(λ, ctr::ellipse)\nis_inside(λ, ctr::circle)\n\nCheck if the eigenvalue λ is in the contour ctr to avoid  spurious eigenvalues.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_contour!-Tuple{Any, Cim.circle}","page":"API","title":"Cim.show_contour!","text":"show_contour!(ax, ctr::circle)\n\nPlot the contour ctr::circle on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_contour!-Tuple{Any, Cim.ellipse}","page":"API","title":"Cim.show_contour!","text":"show_contour!(ax, ctr::ellipse)\n\nPlot the contour ctr::ellipse on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_eigenvalues!-Tuple{Any, AbstractArray}","page":"API","title":"Cim.show_eigenvalues!","text":"show_eigenvalues(ax, eigvals::AbstractArray)\n\nPlot the eigenvalues on complex plane on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_quadpts!-Tuple{Any, Cim.quadpts}","page":"API","title":"Cim.show_quadpts!","text":"show_quadpts!(ax, pts::quadpts)\n\nPlot the quadrature points pts on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"#Cim","page":"Home","title":"Cim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Cim.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Cim.jl has not been registered. So it need to be installed by url. Press ] in  the REPL to enter pkg> mode. Then enter","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/peakfind/Cim.jl.git","category":"page"},{"location":"#Resources","page":"Home","title":"Resources","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In this section, we conclude some resources for learning the Contour integral method.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Beyn [1] and Guttel Tisseur [2]  discuss the nonlinear eigenvalue problem F(lambda)v = 0, where F(lambda)  is a holomorphic matrix-valued function.\nA basic MATLAB implementation can be found in Figure 5.3 in [2]\nMennicken and Moller [3] investigate a more general  case: F(lambda) is a Fredholm operator and holomorphic with respect to lambda.","category":"page"},{"location":"#Related-Packages","page":"Home","title":"Related Packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"NEP-PACK/NonlinearEigenproblems.jl: It is a very general package for solving and manipulating nonlinear eigenvalue problems.\nWavesAndEigenvalues.jl:  It provides an interface to define, solve, and perturb nonlinear eigenvalues.","category":"page"},{"location":"contour/#Contours-and-Quadrature-Rules","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"","category":"section"},{"location":"contour/#Contours","page":"Contours and Quadrature Rules","title":"Contours","text":"","category":"section"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"We plan to support three kinds of contours: ellipse, circle, and rectangle (not support yet).","category":"page"},{"location":"contour/#Quadrature-Rules","page":"Contours and Quadrature Rules","title":"Quadrature Rules","text":"","category":"section"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"We use the composite trapezoidal rule on ellipses and circles. We can get the quadrature  points by using ","category":"page"},{"location":"contour/#Cim.get_quadpts","page":"Contours and Quadrature Rules","title":"Cim.get_quadpts","text":"get_quadpts(ctr::ellipse, num_quadpts::Int64)\nget_quadpts(ctr::circle, num_quadpts::Int64)\n\nGet the quadrature points on the ellipse ctr. Here we use trapezoidal rule.\n\nArguments\n\nctr: the contour (circle or ellipse) that we discretize\nnum_quadpts: the number of the quadrature nodes\n\n\n\n\n\n","category":"function"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"For example, ","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"# Create a ellipse\nelp = Cim.ellipse([150, 0], 148, 148)\n# Get the quadrature points associated to the trapezoidal rule\npts = get_quadpts(ctr, 50)","category":"page"},{"location":"eigenvibrations/#Eigenvibrations-of-a-string","page":"Tutorials","title":"Eigenvibrations of a string","text":"","category":"section"},{"location":"eigenvibrations/#Introduction","page":"Tutorials","title":"Introduction","text":"","category":"section"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"Consider the following eigenvalue problem which appears in many papers, for example [1], [4], and [5]. In this introduction, we mainly follow the formulation in [5]. Find lambda  kappa and a nonzero function u0 1 to mathbbR such that","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"beginalign*\n    -u(x) = lambda u(x) \n    u(0) = 0 -u(1) = varphi(lambda)u(1)\nendalign*","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"where varphi(lambda) = lambda kappa M  (lambda - kappa) and kappa = K  M for given positive numbers K, M. This equation describes the eigenvibrations of a string with a load of mass M attached by an elastic spring of stiffness K.","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"A finite element discretization of the eigenvalue problem with P1 element on subintervals of length h = 1n leads to the nonlinear eigenvalue problem","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"(mathbfA_1 + varphi(lambda)mathbfe_n mathbfe_n^mathrmT - lambda mathbfA_3) mathbfu = 0","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"where","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"mathbfA_1 = frac1h\nbeginbmatrix\n2   -1                 \n-1  ddots  ddots     \n    ddots  2       -1 \n            -1      1\nendbmatrix\n\nmathbfA_3 = frach6\nbeginbmatrix\n4  1                 \n1  ddots  ddots    \n   ddots  4       1 \n           1       2\nendbmatrix","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"and mathbfe_n is the unit vector with 1 on its n-th entry and 0 on others.","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"For simplicity, we set K = M = kappa = 1. Then varphi(lambda) reduces to fraclambdalambda - 1. We present computed eigenvalues with n = 100 and n = 400 in [5].","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"n lambda_1 lambda_2 lambda_3 lambda_4 lambda_5\n100 4.4821765459 24.223573113 63.723821142 123.03122107 202.20089914\n400 4.4820338110 24.219005847 63.692138408 122.91317036 201.88234012","category":"page"},{"location":"eigenvibrations/#Contour-integral-method","page":"Tutorials","title":"Contour integral method","text":"","category":"section"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"In this section, we will use the contour integral method to solve the above nonlinear eigenvalue problem. First, we load Cim and SparseArrays.","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"using Cim, SparseArrays","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"We use functions nep1 and nep2 to construct the discrete nonlinear eigenvalue problems for n = 100 and n = 400.","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"# n = 100\nfunction nep1(z::ComplexF64)\n    d = 100\n    off_diag = -(d + z/(6 * d)) * ones(d - 1)\n    diag = (2 * d - 2 * z/(3 * d)) * ones(d)\n    diag[end] = 0.5 * diag[end] + z/(z - 1.0)\n\n    A = spdiagm(1 => off_diag, 0 => diag, -1 => off_diag)\n\n    return A\nend;\n\n# n = 400\nfunction nep2(z::ComplexF64)\n    d = 400\n    off_diag = -(d + z/(6 * d)) * ones(d - 1)\n    diag = (2 * d - 2 * z/(3 * d)) * ones(d)\n    diag[end] = 0.5 * diag[end] + z/(z - 1.0)\n\n    A = spdiagm(1 => off_diag, 0 => diag, -1 => off_diag)\n\n    return A\nend;\nnothing #hide","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"We set the number of the quadrature nodes and the number of columns of random chosen matrx.","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"# the number of the quadrature nodes\nN = 30;\n# the number of columns of random chosen matrx\nl = 10;\nnothing #hide","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"We define the contour which is an ellipse with center (150 0) and same semi-major and semi-minor axes 148:","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"elp = Cim.ellipse([150, 0], 148, 148)","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"Finally, we use cim to compute the eigenvalues inside the elp. For n = 100, we get the eigenvalues lambda_1:","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"λ₁ = cim(elp, nep1, 100, l; n=N)","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"For n = 400, we get the eigenvalues lambda_2:","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"λ₂ = cim(elp, nep2, 400, l; n=N)","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"","category":"page"},{"location":"eigenvibrations/","page":"Tutorials","title":"Tutorials","text":"This page was generated using Literate.jl.","category":"page"}]
}

var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [Cim]","category":"page"},{"location":"api/#Cim.AbstractContour","page":"API","title":"Cim.AbstractContour","text":"contours that we plan to support:      1. ellipse      2. circle      3. rectangle (not supported yet)\n\n\n\n\n\n","category":"type"},{"location":"api/#Cim.quadpts","page":"API","title":"Cim.quadpts","text":"quadpts\n\nQuadrature points of the trapezoidal rule on the contours.\n\nProperties\n\nN: the number of the quadrature nodes\nnodes: quadrature nodes size of N x 2 \nnodes_prime: derivative of the parametrization size of N x 2\n\n\n\n\n\n","category":"type"},{"location":"api/#Cim.contr_int-Tuple{Cim.AbstractContour, Function, Any, Int64}","page":"API","title":"Cim.contr_int","text":"contr_int(ctr, NEP, D, l; n=50, tol=1e-12)\n\nContour integral method to calculate the eigenvalues inside the contour ctr\n\nArugments\n\nctr: the contour\nnep: the nonlinear eigenvalue problem\nD:\nl:\nn: the number of the quadrature points (here we use the trapezoid rule)\ntol: tolerance to determine the number of nonzero singular values\n\nReference\n\nWolf-Jurgen Beyn, An integral method for solving NEPs, Linear Algebra Appl., 2012.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.contr_int_ho-Tuple{Cim.quadpts, Function, Vararg{Int64, 4}}","page":"API","title":"Cim.contr_int_ho","text":"contr_int_ho()\n\nContour integral method with high-order moments \n\nArguments\n\nIn this function, we follow the notations in Stefan Guttel, Francoise Tisseur, Acta Numerica, 2017\n\nctr:\nnep:\nD:\nr, l: size of the probing matrices\npbar: the number of the moments (for p = 0, ..., pbar)\n\nReference\n\nStefan Guttel, Francoise Tisseur, The NEP, Acta Numerica, 2017.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.get_quadpts-Tuple{Cim.circle, Int64}","page":"API","title":"Cim.get_quadpts","text":"get_quadpts(ctr::circle, num_quadpts::Int64)\n\nGet the quadrature points on the circle ctr. Here we use trapezoidal rule.\n\nArguments\n\nctr: the contour that we discretize \nnum_quadpts: the number of the quadrature nodes\n\nTODO: note that rectangle is different with ellipse and circle\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.get_quadpts-Tuple{Cim.ellipse, Int64}","page":"API","title":"Cim.get_quadpts","text":"get_quadpts(ctr::ellipse, num_quadpts::Int64)\n\nGet the quadrature points on the ellipse ctr. Here we use trapezoidal rule.\n\nArguments\n\nctr`: the contour that we discretize \nnum_quadpts: the number of the quadrature nodes\n\nTODO: note that rectangle is different with ellipse and circle\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.is_inside-Tuple{Any, Cim.ellipse}","page":"API","title":"Cim.is_inside","text":"is_inside(λ, ctr::ellipse)\nis_inside(λ, ctr::circle)\n\nCheck if the eigenvalue λ is in the contour ctr to avoid  spurious eigenvalues.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_contour!-Tuple{Any, Cim.circle}","page":"API","title":"Cim.show_contour!","text":"show_contour!(ax, ctr::circle)\n\nPlot the contour ctr::circle on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_contour!-Tuple{Any, Cim.ellipse}","page":"API","title":"Cim.show_contour!","text":"show_contour!(ax, ctr::ellipse)\n\nPlot the contour ctr::ellipse on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_eigenvalues!-Tuple{Any, AbstractArray}","page":"API","title":"Cim.show_eigenvalues!","text":"show_eigenvalues(ax, eigvals::AbstractArray)\n\nPlot the eigenvalues on complex plane on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"api/#Cim.show_quadpts!-Tuple{Any, Cim.quadpts}","page":"API","title":"Cim.show_quadpts!","text":"show_quadpts!(ax, pts::quadpts)\n\nPlot the quadrature points pts on Axis ax by using CairoMakie.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Cim","category":"page"},{"location":"#Cim","page":"Home","title":"Cim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Cim.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Cim.jl has not been registered. So it need to be installed by url. Press ] in  the REPL to enter pkg> mode. Then enter","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/peakfind/Cim.jl.git","category":"page"},{"location":"contour/#Contours-and-Quadrature-Rules","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"","category":"section"},{"location":"contour/#Contours","page":"Contours and Quadrature Rules","title":"Contours","text":"","category":"section"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"We plan to support three kinds of contours: ellipse, circle, and rectangle (not support yet).","category":"page"},{"location":"contour/#Quadrature-Rules","page":"Contours and Quadrature Rules","title":"Quadrature Rules","text":"","category":"section"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"We use the trapezoidal rule on ellipse and circles. The trapezoidal rule can be  handled by","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"quadpts","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"We can get the quadrature points by using ","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"get_quadpts","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"For example, ","category":"page"},{"location":"contour/","page":"Contours and Quadrature Rules","title":"Contours and Quadrature Rules","text":"# Create a ellipse\nelp = Cim.ellipse([150, 0], 148, 148)\n# Get the quadrature points associated to the trapezoidal rule\npts = get_quadpts(ctr, 50)","category":"page"}]
}
